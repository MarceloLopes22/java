package br.com.caelum.leilao.teste;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.Test;

import br.com.caelum.leilao.builder.CriadorDeLeilao;
import br.com.caelum.leilao.dominio.Lance;
import br.com.caelum.leilao.dominio.Leilao;
import br.com.caelum.leilao.dominio.Usuario;

public class LeilaoTest {
	
	private Leilao leilao;
	private Usuario marcelo;
	private Usuario juliany;

	@Before
	public void setUp() {
		marcelo = new Usuario("Marcelo");
		juliany = new Usuario("Juliany");
		
	}
	
	@Test
	public void naoDeveAceitarDoisLancesSeguidosDoMesmoUsuario() {
		assertEquals(0, leilao.getLances().size(), 0.00001);

		Leilao leilao = new CriadorDeLeilao().para("MacBook Pro")
						.lance(marcelo, 2.000)
						.lance(marcelo, 5.000)
						.constroi();
		
		assertEquals(1, leilao.getLances().size(), 0.00001);
		assertEquals(2.000, leilao.getLances().get(0).getValor(), 0.00001);
	}
	
	 @Test
	    public void naoDeveAceitarMaisDoQue5LancesDeUmMesmoUsuario() {
	        Usuario steveJobs = new Usuario("Steve Jobs");
	        Usuario billGates = new Usuario("Bill Gates");

	        Leilao leilao = new CriadorDeLeilao().para("Macbook Pro 15")
	                .lance(steveJobs, 2000)
	                .lance(billGates, 3000)
	                .lance(steveJobs, 4000)
	                .lance(billGates, 5000)
	                .lance(steveJobs, 6000)
	                .lance(billGates, 7000)
	                .lance(steveJobs, 8000)
	                .lance(billGates, 9000)
	                .lance(steveJobs, 10000)
	                .lance(billGates, 11000)
	                .lance(steveJobs, 12000)
	                .constroi();

	        assertEquals(10, leilao.getLances().size());
	        int ultimo = leilao.getLances().size()-1;
	        assertEquals(11000.0, leilao.getLances().get(ultimo).getValor(), 0.00001);
	    }  
	
	@Test
    public void deveDobrarOUltimoLanceDado() {
        Leilao leilao = new Leilao("Macbook Pro 15");
        Usuario steveJobs = new Usuario("Steve Jobs");
        Usuario billGates = new Usuario("Bill Gates");

        leilao.propoe(new Lance(steveJobs, 2000));
        leilao.propoe(new Lance(billGates, 3000));
        leilao.dobraLance(steveJobs);

        assertEquals(4000, leilao.getLances().get(2).getValor(), 0.00001);
    }
	
	@Test
    public void naoDeveDobrarCasoNaoHajaLanceAnterior() {
        Leilao leilao = new Leilao("Macbook Pro 15");
        Usuario steveJobs = new Usuario("Steve Jobs");

        leilao.dobraLance(steveJobs);

        assertEquals(0, leilao.getLances().size());
    }
	
}
